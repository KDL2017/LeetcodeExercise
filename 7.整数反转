    //7.整数反转 难度：中等 要点：溢出判断与处理
    //范围要求：如果反转后整数超过 32 位的有符号整数的范围 [−2^31,  2^31 − 1] ，就返回 0。
    //我的解题思路：
    //  第一反应是转换成字符串反转再转换回数字
    //  但还是先考虑数学方法

    //数学方法，通过位数变换
    //得注意运算时的溢出可能，关于如何正确判断溢出，参考链接：https://blog.csdn.net/xiaomingZeng/article/details/80526607
    //成功通过，2024/8/28
    //内心OS：力扣上的执行用时竟然是0ms，看来运行速度真的很快，
    //        以及这种简单的溢出异常判断都这么麻烦，之后碰到的异常处理不敢想
    int reverse(int x) {
        int ans = 0;
        if (x < 10 && x>-10) // 个位数直接返回
            return x;
        while (x / 10 != 0) // 开始遍历每一位
        {
            //if (ans * 10 + 10 * (x % 10) > INT_MAX || ans * 10 + 10 * (x % 10) < INT_MIN) 这样不行
            if (((ans > 0) && (ans > (INT_MAX - 10 * (x % 10)) / 10)) ||
                ((ans < 0) && (ans < (INT_MIN - 10 * (x % 10)) / 10)))  // 正确的溢出判断，下同
                return 0;
            ans = ans * 10 + 10 * (x % 10);
            x = x / 10;
        }
        //if (ans + x > INT_MAX || ans + x < INT_MIN) 同上，这样不行
        if (((ans > 0) && (ans > (INT_MAX - x))) ||
            ((ans < 0) && (ans < (INT_MIN - x))))
            return 0;
        return ans + x;
    }
